drop table uf if exists cascade;
drop table bairro if exists cascade;
drop table cep if exists cascade;
drop table municipio if exists cascade;
drop table grupo if exists cascade;
drop table pessoa if exists cascade;
drop table pessoa_fisica if exists cascade;
drop table pessoa_juridica if exists cascade;
drop table meta if exists cascade;
drop table movimento if exists cascade;
drop table transportador if exists cascade;
drop table comissao if exists cascade;
drop table vendedor if exists cascade;
drop table produto if exists cascade;
drop table venda if exists cascade;
drop table venda_item if exists cascade;
drop table nota_fiscal if exists cascade;
drop table outros_movimentos if exists cascade;
drop table outros_movimentos_item if exists cascade;
drop table marca if exists cascade;

create table uf (id integer GENERATED BY DEFAULT AS IDENTITY, ds_uf varchar(255),
constraint pk_uf primary key (id));

create table bairro (id integer GENERATED BY DEFAULT AS IDENTITY, ds_bairro varchar(255),
constraint pk_bairro primary key (id));

create table cep (id integer GENERATED BY DEFAULT AS IDENTITY, nr_cpf varchar(20),
constraint pk_cep primary key (id));

create table municipio (id integer GENERATED BY DEFAULT AS IDENTITY, ds_municipio varchar(255), cd_ibge varchar(10),
constraint pk_municipio primary key (id),
constraint un_municipio_ibge unique (cd_ibge));

create table grupo(id integer GENERATED BY DEFAULT AS IDENTITY, ds_grupo varchar(255),
constraint pk_grupo primary key(id));

create table marca(id integer GENERATED BY DEFAULT AS IDENTITY, ds_marca varchar(255),
constraint pk_marca primary key(id));

create table pessoa(id integer GENERATED BY DEFAULT AS IDENTITY, ds_nome varchar(255), ds_endereco varchar(255), nr_endereco varchar(7), id_bairro integer, 
id_municipio integer, id_uf integer, id_cep integer, nr_telefone varchar(12), ds_email varchar(255),
constraint pk_pessoa primary key (id),
constraint fk_pessoa_bairro foreign key (id_bairro) references bairro (id),
constraint fk_pessoa_municipio foreign key (id_municipio) references municipio (id),
constraint fk_pessoa_uf foreign key (id_uf) references uf (id),
constraint fk_pessoa_cep foreign key (id_cep) references cep(id));

create table pessoa_fisica (id_pessoa integer, nr_cpf varchar(11), nr_rg varchar(10), sexo varchar(1), dt_nascimento date,
constraint pk_pessoa_fisica primary key (id_pessoa, nr_cpf),
constraint fk_pf_pessoa foreign key (id_pessoa) references pessoa (id),
constraint un_pf_cpf unique (nr_cpf),
constraint un_pf_rg unique (nr_rg),
constraint ck_pf_sexo check (sexo in('F','M')));

create table pessoa_juridica (id_pessoa integer, nr_cnpj varchar(14), nr_ie varchar(10), nr_im varchar(9), nr_cnae varchar(10), ds_contribuinte varchar(1),
constraint pk_pessoa_juridica primary key (id_pessoa, nr_cnpj),
constraint fk_pj_pessoa foreign key (id_pessoa) references pessoa (id),
constraint ck_pj_contribuinte check (ds_contribuinte in('S','N')));

create table meta(id integer GENERATED BY DEFAULT AS IDENTITY, ds_meta varchar(255), vl_meta integer, dt_inicio_vigencia date, dt_final_vigencia date,
constraint pk_meta primary key (id));

create table movimento(id integer GENERATED BY DEFAULT AS IDENTITY, tipo integer, ds_movimento varchar(255),
constraint pk_movimento primary key (id));

create table transportador(id integer GENERATED BY DEFAULT AS IDENTITY, ds_transportador varchar(255), ds_placa varchar(15),
constraint pk_transportador primary key (id));

create table comissao(id integer GENERATED BY DEFAULT AS IDENTITY, vl_comissao numeric(15,2), dt_inicio_vigencia date, dt_final_vigencia date,
constraint pk_comissao primary key (id));

create table vendedor(id integer GENERATED BY DEFAULT AS IDENTITY, id_pessoa integer, id_meta integer, id_comissao integer,
constraint pk_vendedor primary key (id),
constraint fk_vendedor_pessoa foreign key (id_pessoa) references pessoa (id),
constraint fk_vendedor_comissao foreign key (id_comissao) references comissao (id),
constraint fk_vendedor_meta foreign key (id_meta) references meta (id));

create table produto(id integer GENERATED BY DEFAULT AS IDENTITY, ds_produto varchar(255), ds_referencia varchar(255), cod_barra varchar(30), id_marca integer,
qt_estoque numeric(15,2), id_grupo integer, vl_custo numeric(15,2), vl_venda numeric(15,2), vl_prazo numeric(15,2), nr_ncm varchar(5), nr_cst varchar(5), tipo_venda numeric(3),
constraint pk_produto primary key (id),
constraint fk_produto_marca foreign key (id_marca) references marca (id),
constraint fk_produto_grupo foreign key (id_grupo) references grupo (id));

create table venda(id integer GENERATED BY DEFAULT AS IDENTITY, ds_venda varchar(255), id_cliente integer, id_vendedor integer, tipo_pgto numeric(30),
vl_desconto numeric(15,2), vl_acrescimo numeric(15,2),
constraint pk_venda primary key (id),
constraint fk_venda_cliente foreign key (id_cliente) references pessoa (id),
constraint fk_venda_vendedor foreign key (id_vendedor) references vendedor (id));

create table venda_item(id integer GENERATED BY DEFAULT AS IDENTITY, id_venda integer, id_produto integer, qt_venda numeric(15,2),
constraint pk_venda_item primary key (id),
constraint fk_venda foreign key (id_venda) references venda(id),
constraint fk_venda_produto foreign key (id_produto) references produto(id));

create table nota_fiscal(id integer GENERATED BY DEFAULT AS IDENTITY, id_venda integer, nr_cfop varchar(10), id_transportador integer,
constraint pk_nf primary key (id),
constraint fk_nf_venda foreign key (id_venda) references venda(id),
constraint fk_nf_transportador foreign key (id_transportador) references transportador(id));

create table outros_movimentos(id integer GENERATED BY DEFAULT AS IDENTITY, id_movimento integer, id_cliente integer, id_vendedor integer,
constraint pk_outros_movimentos primary key (id),
constraint fk_ouros_mov_cliente foreign key (id_cliente) references pessoa(id),
constraint fk_outros_mov_vendedor foreign key (id_vendedor) references vendedor(id));

create table outros_movimentos_item(id integer GENERATED BY DEFAULT AS IDENTITY, id_outros_mov integer, id_produto integer, qt_movimento numeric(15,2),
constraint pk_outros_movimentos_item primary key (id),
constraint fk_ouros_movimentos_item foreign key (id_outros_mov) references outros_movimentos(id),
constraint fk_outros_mov_item_produto foreign key (id_produto) references produto(id));
